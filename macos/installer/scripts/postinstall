#!/bin/bash

# Post-installation script for AK
# This script runs after the AK package is installed

set -e

# Script metadata
SCRIPT_NAME="AK Post-Install"
LOG_FILE="/tmp/ak-postinstall.log"

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') [${SCRIPT_NAME}] $1" | tee -a "$LOG_FILE"
}

log "Starting post-installation setup"

# Set proper permissions for installed files
log "Setting file permissions"
chmod 755 /usr/local/bin/ak
if [[ -f /usr/local/bin/ak-gui ]]; then
    chmod 755 /usr/local/bin/ak-gui
fi

# Set permissions for manual page
if [[ -f /usr/local/share/man/man1/ak.1 ]]; then
    chmod 644 /usr/local/share/man/man1/ak.1
fi

# Update man database
log "Updating manual database"
if command -v mandb >/dev/null 2>&1; then
    mandb -q /usr/local/share/man 2>/dev/null || true
fi

# Create symlinks in standard locations if they don't exist
log "Creating symlinks for system PATH"

# Check if /usr/local/bin is in PATH
if [[ ":$PATH:" != *":/usr/local/bin:"* ]]; then
    log "WARNING: /usr/local/bin is not in PATH. Users may need to add it manually."
fi

# Verify installation
log "Verifying installation"
if [[ -f /usr/local/bin/ak ]]; then
    AK_VERSION=$(/usr/local/bin/ak --version 2>/dev/null | head -1 || echo "Unknown")
    log "AK CLI installed successfully: $AK_VERSION"
else
    log "ERROR: AK CLI installation verification failed"
fi

if [[ -f /usr/local/bin/ak-gui ]]; then
    log "AK GUI installed successfully"
fi

# Create initial configuration directory for users
log "Setting up user configuration template"
TEMPLATE_DIR="/usr/local/share/ak/templates"
if [[ ! -d "$TEMPLATE_DIR" ]]; then
    mkdir -p "$TEMPLATE_DIR"
    
    # Create a sample configuration template
    cat > "$TEMPLATE_DIR/config-sample.conf" << 'EOF'
# AK Configuration Template
# Copy this to ~/.config/ak/config.conf and customize as needed

# Default settings
default_profile=default
auto_backup=true
gpg_enabled=true

# Security settings
session_timeout=3600
require_confirmation=true
EOF
    
    chmod 644 "$TEMPLATE_DIR/config-sample.conf"
fi

# Set up shell integration automatically
log "Setting up shell integration..."
if [[ -x /usr/local/bin/ak ]]; then
    # Run as the actual user (not root) if possible
    if [[ -n "$USER" && "$USER" != "root" ]]; then
        su "$USER" -c '/usr/local/bin/ak install-shell' 2>/dev/null || {
            log "Shell integration setup will be done on first run"
        }
    else
        # System-wide setup for all users
        /usr/local/bin/ak install-shell 2>/dev/null || {
            log "Shell integration setup will be done on first run"
        }
    fi
    
    # Create auto-setup script for user profiles
    mkdir -p /usr/local/etc/profile.d
    cat > /usr/local/etc/profile.d/ak-autosetup.sh << 'SCRIPT_EOF'
# AK Auto-setup for macOS
# Automatically sets up shell integration for users

ak_auto_setup() {
    # Skip if already set up or if ak not available
    if [ ! -x /usr/local/bin/ak ] || [ -f "$HOME/.config/ak/shell-init.sh" ]; then
        return 0
    fi
    
    # Run ak install-shell for this user
    /usr/local/bin/ak install-shell 2>/dev/null || return 0
    
    # Add to user's shell RC file
    USER_SHELL=$(basename "${SHELL:-/bin/bash}")
    
    if [ "$USER_SHELL" = "bash" ]; then
        SHELL_RC="$HOME/.bashrc"
        [ ! -f "$SHELL_RC" ] && SHELL_RC="$HOME/.bash_profile"
    elif [ "$USER_SHELL" = "zsh" ]; then
        SHELL_RC="$HOME/.zshrc"
    else
        SHELL_RC="$HOME/.profile"
    fi
    
    # Add source line if not already present
    AK_CONFIG_DIR="$HOME/.config/ak"
    SOURCE_LINE="source \"$AK_CONFIG_DIR/shell-init.sh\""
    
    if [ -f "$SHELL_RC" ] && ! grep -q "shell-init.sh" "$SHELL_RC" 2>/dev/null; then
        echo "" >> "$SHELL_RC"
        echo "# AK Shell Integration - Auto-loading profiles" >> "$SHELL_RC"
        echo "$SOURCE_LINE" >> "$SHELL_RC"
    elif [ ! -f "$SHELL_RC" ]; then
        mkdir -p "$(dirname "$SHELL_RC")"
        echo "# AK Shell Integration - Auto-loading profiles" > "$SHELL_RC"
        echo "$SOURCE_LINE" >> "$SHELL_RC"
    fi
}

# Run auto-setup on login for interactive shells
if [ -n "$PS1" ] && [ -n "$HOME" ]; then
    ak_auto_setup 2>/dev/null &
fi
SCRIPT_EOF
    
    chmod 644 /usr/local/etc/profile.d/ak-autosetup.sh
    log "Shell integration auto-setup configured"
fi

# Display success message
log "Installation completed successfully!"
log "ðŸŽ‰ AK Shell Auto-loading Features:"
log "   â€¢ Automatic profile loading when entering directories"
log "   â€¢ 'ak load default --persist' will auto-load in directories"
log "   â€¢ Directory change detection for seamless environment switching"
log ""
log "To get started:"
log "  - Run 'ak --help' for CLI usage"
if [[ -f /usr/local/bin/ak-gui ]]; then
    log "  - Run 'ak-gui' for graphical interface"
fi
log "  - Configuration directory: ~/.config/ak"
log "  - Manual page: man ak"
log "  - Shell integration is automatically configured"

# Clean up old log files (keep only last 5)
LOG_DIR="/tmp"
cd "$LOG_DIR"
ls -t ak-*.log 2>/dev/null | tail -n +6 | xargs rm -f 2>/dev/null || true

exit 0